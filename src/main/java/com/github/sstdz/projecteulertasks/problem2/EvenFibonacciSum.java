package com.github.sstdz.projecteulertasks.problem2;

public class EvenFibonacciSum {
    /*
    * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    * By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
    * find the sum of the even-valued terms.
    * */

    public static void main(String[] args) {
        EvenFibonacciSum evenFibonacciSum = new EvenFibonacciSum(4_000_000, true);
        System.out.println(evenFibonacciSum.getSum());
    }

    private int max;
    private boolean even;

    public EvenFibonacciSum(int max, boolean even){
        this.max = max;
        this.even = even;
    }

    public long getSum(){
        int result = 0;
        int prevValue = 0;

        for (int i = 1; i < max;) {
            int buf = i;
            i = i + prevValue;
            prevValue = buf;

            if (even){
                if (i % 2 == 0){
                    result += i;
                }
            } else {
                if (i % 2 == 1){
                    result += i;
                }
            }
        }

        return result;
    }
}
